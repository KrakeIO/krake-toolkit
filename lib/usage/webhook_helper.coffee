# Dependencies
request = require 'request'

class WebHookHelper

  # @Description : the default constructore
  # @param : data_server:String - the URL location to Krake data server
  # @param : webhook_url:String - the URL indicated by the Krake owner to post the event information to
  # @param : krakeSettings:Object - holds all settings information of the Krake
  # @param : jobWrapper:Object - holds all information on the actual Krake that was generated by the engine
  constructor : (@data_server, @webhook_url, @krake_settings, @job_wrapper)->


  
  # @Description : handles the processing of command
  # @param : command:String
  #   complete  - called when the harvesting job gets completed
  #   start     - called when the harvesting job in the queue is started
  process : (command)->
    switch command
      when 'complete'
        @complete()
        
      when 'start'
        @start()
      
  


  # @Description : handles creation and posting of HTTP packet for the complete event  
  complete : ()->

    options = 
      method: 'POST'
      url : @webhook_url
      json : {
        krake_name : @krake_settings.name,
        krake_handle : @krake_settings.handle,  
        event_name : 'complete',
        batch_time : @job_wrapper.query.data.pingedAt
      }

    console.log '[WEBHOOK_HELPER] : Posting Complete Package to WebHook URL'
    console.log '============'
    console.log options
    console.log '============'
    
    request options, (error, response, body)=>
      console.log 'Task %s notification sent to WebHook Server', 'complete'
      console.log body
    
  
  
  
  # @Description : handles creation and posting of HTTP packet for the start event
  start : ()->
    

module.exports = WebHookHelper